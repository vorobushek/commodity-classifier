package org.example.cayenne.persistent.auto;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;
import org.example.cayenne.persistent.EdenicaIzmerenia;
import org.example.cayenne.persistent.Enum;
import org.example.cayenne.persistent.Izdelie;
import org.example.cayenne.persistent.Parametr;

/**
 * Class _Value was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Value extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Boolean> IS_ENUM = Property.create("isEnum", Boolean.class);
    public static final Property<String> VALUE = Property.create("value", String.class);
    public static final Property<EdenicaIzmerenia> EDENICA_IZMERENIA = Property.create("edenicaIzmerenia", EdenicaIzmerenia.class);
    public static final Property<Enum> ENUM = Property.create("enum", Enum.class);
    public static final Property<Izdelie> IZDELIE = Property.create("izdelie", Izdelie.class);
    public static final Property<Parametr> PARAMETR = Property.create("parametr", Parametr.class);

    public void setIsEnum(boolean isEnum) {
        writeProperty("isEnum", isEnum);
    }
	public boolean isIsEnum() {
        Boolean value = (Boolean)readProperty("isEnum");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setValue(String value) {
        writeProperty("value", value);
    }
    public String getValue() {
        return (String)readProperty("value");
    }

    public void setEdenicaIzmerenia(EdenicaIzmerenia edenicaIzmerenia) {
        setToOneTarget("edenicaIzmerenia", edenicaIzmerenia, true);
    }

    public EdenicaIzmerenia getEdenicaIzmerenia() {
        return (EdenicaIzmerenia)readProperty("edenicaIzmerenia");
    }


    public void setEnum(Enum _enum) {
        setToOneTarget("enum", _enum, true);
    }

    public Enum getEnum() {
        return (Enum)readProperty("enum");
    }


    public void setIzdelie(Izdelie izdelie) {
        setToOneTarget("izdelie", izdelie, true);
    }

    public Izdelie getIzdelie() {
        return (Izdelie)readProperty("izdelie");
    }


    public void setParametr(Parametr parametr) {
        setToOneTarget("parametr", parametr, true);
    }

    public Parametr getParametr() {
        return (Parametr)readProperty("parametr");
    }


}
