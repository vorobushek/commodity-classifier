package org.example.cayenne.persistent.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;
import org.example.cayenne.persistent.Classifikator;
import org.example.cayenne.persistent.ParamClassa;

/**
 * Class _Classifikator was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Classifikator extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> NODE_NAME = Property.create("nodeName", String.class);
    public static final Property<List<ParamClassa>> PARAMS_CLASSA = Property.create("paramsClassa", List.class);
    public static final Property<List<Classifikator>> TO_CHIELDS = Property.create("toChields", List.class);
    public static final Property<Classifikator> TO_PARENT = Property.create("toParent", Classifikator.class);

    public void setNodeName(String nodeName) {
        writeProperty("nodeName", nodeName);
    }
    public String getNodeName() {
        return (String)readProperty("nodeName");
    }

    public void addToParamsClassa(ParamClassa obj) {
        addToManyTarget("paramsClassa", obj, true);
    }
    public void removeFromParamsClassa(ParamClassa obj) {
        removeToManyTarget("paramsClassa", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ParamClassa> getParamsClassa() {
        return (List<ParamClassa>)readProperty("paramsClassa");
    }


    public void addToToChields(Classifikator obj) {
        addToManyTarget("toChields", obj, true);
    }
    public void removeFromToChields(Classifikator obj) {
        removeToManyTarget("toChields", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Classifikator> getToChields() {
        return (List<Classifikator>)readProperty("toChields");
    }


    public void setToParent(Classifikator toParent) {
        setToOneTarget("toParent", toParent, true);
    }

    public Classifikator getToParent() {
        return (Classifikator)readProperty("toParent");
    }


}
